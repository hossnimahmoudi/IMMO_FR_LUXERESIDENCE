# -*- coding: utf-8 -*-
# Define here the models for your scraped items
#
# See documentation in:
# http://doc.scrapy.org/en/latest/topics/items.html

from __future__ import unicode_literals

import scrapy


# Extract domain from url in Python 2, 3
# http://stackoverflow.com/questions/21563744/python-2-and-3-extract-domain-from-url
import sys
if sys.version_info >= (3, 0):
    from urllib.parse import urlparse
if sys.version_info < (3, 0) and sys.version_info >= (2, 5):
    from urlparse import urlparse


###
# Item Example
###

class NeukollnExampleItem(scrapy.Item):
    """
    Given as an example if you use the CSV_JSON_TAB_Pipeline
    """
    NEUKOLLN_ORIGINAL_PHONE_TELEPHONE = scrapy.Field(serializer=str)  # fill the original data here
    NEUKOLLN_DEFAULT_CC_TELEPHONE = scrapy.Field(serializer=str)  # precise the default code country here
    TELEPHONE = scrapy.Field(serializer=str)  # the "clean" parsed data will be set here by the pipeline if used


class NeukollnBaseItem(scrapy.Item):

    def __init__(self, *args, **kwargs):
        """Initialization. Set generic field values"""
        super(NeukollnBaseItem, self).__init__(*args, **kwargs)

    ANNONCE_LINK = scrapy.Field()
    FROM_SITE = scrapy.Field()

    ###
    # Additional fields for debug purpose
    ###
    # URL of the listing page where the ad has been found
    NEUKOLLN_FROM_LISTING_PAGE = scrapy.Field()
    # Path to the cache
    NEUKOLLN_REQUEST_PATH = scrapy.Field()

    def set_basefields(self, spider, response):
        self['ANNONCE_LINK'] = response.url
        self['FROM_SITE'] = urlparse(response.url).hostname
        self['NEUKOLLN_FROM_LISTING_PAGE'] = response.request.headers.get('Referer', None)

        from scrapy.utils.project import get_project_settings
        from neukolln.middlewares import CustomFilesystemCacheStorage
        fs = CustomFilesystemCacheStorage(get_project_settings())
        fs.crawl_date = spider.crawl_date
        self['NEUKOLLN_REQUEST_PATH'] = fs._get_request_path(spider, response.request)


###
# Custom item for specific projects
###

class ImmoItem(NeukollnBaseItem, scrapy.Item):
    """Main fields. See "Normalisation_champs_IMMO.xlsx"""

    def __init__(self, *args, **kwargs):
        """Initialization. Set generic field values"""
        super(ImmoItem, self).__init__(*args, **kwargs)

    ID_CLIENT = scrapy.Field()
    ANNONCE_DATE = scrapy.Field()
    ACHAT_LOC = scrapy.Field()
    CATEGORIE = scrapy.Field()
    NEUF_IND = scrapy.Field()
    NOM = scrapy.Field()
    ADRESSE = scrapy.Field()
    CP = scrapy.Field()
    VILLE = scrapy.Field()
    QUARTIER = scrapy.Field()
    DEPARTEMENT = scrapy.Field()
    REGION = scrapy.Field()
    PROVINCE = scrapy.Field()
    ANNONCE_TEXT = scrapy.Field()
    ETAGE = scrapy.Field()
    NB_ETAGE = scrapy.Field()
    LATITUDE = scrapy.Field()
    LONGITUDE = scrapy.Field()
    M2_TOTALE = scrapy.Field()
    SURFACE_TERRAIN = scrapy.Field()
    NB_GARAGE = scrapy.Field()
    PHOTO = scrapy.Field()
    PIECE = scrapy.Field()
    PRIX = scrapy.Field()
    PRIX_M2 = scrapy.Field()
    URL_PROMO = scrapy.Field()
    PAYS_AD = scrapy.Field()
    PRO_IND = scrapy.Field()
    SELLER_TYPE = scrapy.Field()
    MINI_SITE_URL = scrapy.Field()
    MINI_SITE_ID = scrapy.Field()
    AGENCE_NOM = scrapy.Field()
    AGENCE_ADRESSE = scrapy.Field()
    AGENCE_CP = scrapy.Field()
    AGENCE_VILLE = scrapy.Field()
    AGENCE_DEPARTEMENT = scrapy.Field()
    EMAIL = scrapy.Field()
    WEBSITE = scrapy.Field()

    NEUKOLLN_ORIGINAL_PHONE_AGENCE_TEL = scrapy.Field()
    NEUKOLLN_DEFAULT_CC_AGENCE_TEL = scrapy.Field()
    AGENCE_TEL = scrapy.Field()
    AGENCE_TEL_2 = scrapy.Field()
    AGENCE_TEL_3 = scrapy.Field()
    AGENCE_TEL_4 = scrapy.Field()

    NEUKOLLN_ORIGINAL_PHONE_AGENCE_FAX = scrapy.Field()
    NEUKOLLN_DEFAULT_CC_AGENCE_FAX = scrapy.Field()
    AGENCE_FAX = scrapy.Field()

    AGENCE_CONTACT = scrapy.Field()
    PAYS_DEALER = scrapy.Field()
    FLUX = scrapy.Field()
    SIREN = scrapy.Field()
    STOCK_NEUF = scrapy.Field()
    SOLD = scrapy.Field()
    MAISON_APT = scrapy.Field()
    SITE_SOCIETE_URL = scrapy.Field()
    SITE_SOCIETE_ID = scrapy.Field()
    SITE_SOCIETE_NAME = scrapy.Field()
    SPIR_ID = scrapy.Field()

    # FEED_EXPORT_FIELDS = [
    #     'ANNONCE_LINK',
    #     'FROM_SITE',
    #     'ID_CLIENT',
    #     'ANNONCE_DATE',
    #     'ACHAT_LOC',
    #     'SOLD',
    #     'MAISON_APT',
    #     'CATEGORIE',
    #     'NEUF_IND',
    #     'NOM',
    #     'ADRESSE',
    #     'CP',
    #     'VILLE',
    #     'QUARTIER',
    #     'DEPARTEMENT',
    #     'REGION',
    #     'PROVINCE',
    #     'ANNONCE_TEXT',
    #     'ETAGE',
    #     'NB_ETAGE',
    #     'LATITUDE',
    #     'LONGITUDE',
    #     'M2_TOTALE',
    #     'SURFACE_TERRAIN',
    #     'NB_GARAGE',
    #     'PHOTO',
    #     'PIECE',
    #     'PRIX',
    #     'PRIX_M2',
    #     'URL_PROMO',
    #     'STOCK_NEUF',
    #     'PAYS_AD',
    #     'PRO_IND',
    #     'SELLER_TYPE',
    #     'MINI_SITE_URL',
    #     'MINI_SITE_ID',
    #     'AGENCE_NOM',
    #     'AGENCE_ADRESSE',
    #     'AGENCE_CP',
    #     'AGENCE_VILLE',
    #     'AGENCE_DEPARTEMENT',
    #     'EMAIL',
    #     'WEBSITE',
    #     'AGENCE_TEL',
    #     'AGENCE_TEL_2',
    #     'AGENCE_TEL_3',
    #     'AGENCE_TEL_4',
    #     'AGENCE_FAX',
    #     'AGENCE_CONTACT',
    #     'PAYS_DEALER',
    #     'FLUX',
    #     'AGENCE_RCS',
    #     'SITE_URL_SOCIETE',
    #     'SITE_SOCIETE_ID',
    #     'SITE_SOCIETE_NAME',
    #     'SPIR_ID'
    #
    #      'NEUKOLLN_ORIGINAL_PHONE_AGENCE_TEL',
    #      'NEUKOLLN_DEFAULT_CC_AGENCE_TEL',
    #
    #      'NEUKOLLN_ORIGINAL_PHONE_AGENCE_FAX',
    #      'NEUKOLLN_DEFAULT_CC_AGENCE_FAX',
    #
    #      'NEUKOLLN_FROM_LISTING_PAGE',
    #Â      'NEUKOLLN_REQUEST_PATH'
    # ]


